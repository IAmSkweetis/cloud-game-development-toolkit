[build-system]
requires = ["uv_build>=0.7.19,<0.8.0"]
build-backend = "uv_build"

[project]
name = "aws-cloud-game-development-toolkit-cli"
version = "0.1.0"
description = "CLI for working with the AWS for Games Cloud Game Development Toolkit."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "boto3>=1.40.5",
    "click<8.2.0",
    "gitpython>=3.1.45",
    "pydantic>=2.11.7",
    "typer>=0.16.0",
]

[[project.authors]]
name = "Scott Wolfe"
email = "scottaw@amazon.com"

[project.scripts]
cgdtk = "cgdtkcli.cli:cgdtkcli_entry"

[tool.black]
line-length = 100

[tool.mypy]
mypy_path = "stubs"
python_version = "3.13"
exclude = "tests/.*"
strict = true
disallow_untyped_decorators = false
plugins = ["pydantic.mypy"]

[tool.pylint.format]
expected-line-ending-format = "LF"
max-line-length = 100

[tool.pylint."messages control"]
disable = ["all"]
enable = ["mixed-line-endings", "unexpected-line-ending-format"]

[tool.pytest.ini_options]
mock_use_standalone_module = true
addopts = "-v --junitxml=pytest.xml --cov=cgdtkcli --cov-report=term-missing --cov-report=xml --cov-report=html --cov-fail-under=1 --cov-config=.coveragerc"
testpaths = ["tests"]
log_file = "pytest.log"
log_file_level = "INFO"
log_file_format = "%(asctime)s %(levelname)s %(message)s"

[tool.uv.build-backend]
module-name = "cgdtkcli"
module-root = ""

[dependency-groups]
dev = [
    "black>=25.1.0",
    "boto3-stubs>=1.40.5",
    "deptry>=0.23.1",
    "flake8>=7.3.0",
    "isort>=6.0.1",
    "mock>=5.2.0",
    "mypy[reports]>=1.17.1",
    "pylint>=3.3.7",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "tox>=4.28.4",
]
